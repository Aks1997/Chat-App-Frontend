{"version":3,"sources":["Actions/actions.js","store/user.js","Components/createRoom.js","Components/room.js","Components/popup.js","Containers/roomList.js","Containers/Main.js","Components/message.js","Components/onlineuser.js","Containers/ChatRoom.js","Hoc/Auxiliary.js","App.js","serviceWorker.js","index.js","Components/createRoom.module.css","Components/message.module.css","Containers/ChatRoom.module.css","Containers/roomList.module.css","Components/room.module.css","Components/popup.module.css","Components/onlineuser.module.css","Hoc/Auxiliary.module.css"],"names":["action","addUser","initialState","socket","openSocket","_id","id","name","room","userReducer","state","arguments","length","undefined","type","actions","newState","Object","objectSpread","createroom","props","react_default","a","createElement","className","classes","roomdiv","roomheader","roominputdiv","roominput","placeholder","onChange","nameChangeHandler","required","roomChangeHandler","passChangeHandler","roombutton","onClick","buttonClickedHandler","Room","roomcount","users","roomjoin","click","Popup","popup","popup_inner","popupheader","message","children","btn","closePopup","buttonMess","warning","RoomList","password","base_url","rooms","roomsToShow","showpopup","_this2","this","axios","get","then","res","console","log","data","map","value","index","setState","view","Components_room","key","e","roomJoin","catch","err","target","_this3","emit","_this4","inp","roomname","onSubmit","roomlistdiv","Component","connect","Main","createPopup","mess","createRoom","roomList","Message","date","Date","time","toTimeString","from","toLowerCase","message_me","message_from","message_outer_div","details","message_common","join","messdiv","onlineuser","namediv","user","spanbg","ChatRoom","messageTyped","messages","online","history","push","on","obj","addMessage","delUser","params","status","forEach","element","ob","concat","toConsumableArray","filter","removeAllListeners","getTime","sendMessage","chatroom_outer_div","chatroom_header_div","header","header_name","header_room","chatroom_content","chatroom_content_comp","chatroom_content_online","Components_onlineuser","chatroom_content_message","Components_message","chatroom_input_div","chatroominput","messageChangeHandler","onKeyDown","keyPressed","chatroombutton","Aux","roomStatus","removeListener","onChangeDetails","pathname","react_router","path","exact","component","Chatroom","dispatch","withRouter","App","react_router_dom","Auxiliary","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","rotate"],"mappings":"6NAIeA,EAJA,CACXC,QAAS,oBCEPC,EAAe,CACjBC,aAAQC,GAAW,6BACnBC,IAAK,GACLC,GAAI,GACJC,KAAM,QACNC,KAAM,WAiBKC,EAdK,WAAgC,IAA/BC,EAA+BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvBT,EAAcF,EAASW,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAOb,EAAOc,MACV,KAAKC,EAAQd,QACT,IAAMe,EAAQC,OAAAC,EAAA,EAAAD,CAAA,GAAOP,GAKrB,OAJAM,EAASX,IAAML,EAAOK,IACtBW,EAASV,GAAKN,EAAOM,GACrBU,EAAST,KAAOP,EAAOO,KACvBS,EAASR,KAAOR,EAAOQ,KAChBQ,EACX,QACI,OAAON,qFCHJS,EAdI,SAACC,GAChB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQC,SACpBL,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAQE,YAAvB,eACAN,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQG,cACpBP,EAAAC,EAAAC,cAAA,SAAOC,UAAWC,IAAQI,UAAWf,KAAK,OAAOgB,YAAY,YAAYC,SAAUX,EAAMY,kBAAmBC,UAAQ,IACpHZ,EAAAC,EAAAC,cAAA,SAAOC,UAAWC,IAAQI,UAAWf,KAAK,OAAOgB,YAAY,YAAYC,SAAUX,EAAMc,kBAAmBD,UAAQ,IACpHZ,EAAAC,EAAAC,cAAA,SAAOC,UAAWC,IAAQI,UAAWf,KAAK,WAAWgB,YAAY,WAAWC,SAAUX,EAAMe,kBAAmBF,UAAQ,KAE3HZ,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAQW,WAAYC,QAASjB,EAAMkB,sBAAtD,8CCCGC,EAVF,SAACnB,GACV,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQC,SACpBL,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAQE,YAAaP,EAAMb,MAC1Cc,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAQe,WAAtB,gCAA+DpB,EAAMqB,MAAM7B,QAC3ES,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAQiB,SAAUL,QAASjB,EAAMuB,OAApD,2BCSGC,EAfD,SAACxB,GACX,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQoB,OACpBxB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQqB,aACpBzB,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAQsB,aAAc3B,EAAM4B,SAC1C5B,EAAM6B,SACP5B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAQyB,IAAKb,QAASjB,EAAM+B,YAAa/B,EAAMgC,YAClE/B,EAAAC,EAAAC,cAAA,WACCH,EAAMiC,4BCLjBC,6MAEF5C,MAAM,CACFH,KAAK,GACLC,KAAK,GACL+C,SAAS,GACTF,QAAQ,GACRG,SAAU,4BACVC,MAAM,GACNC,YAAY,KACZC,WAAU,sFAGK,IAAAC,EAAAC,KACfC,IAAMC,IAAIF,KAAKnD,MAAM8C,SAAS,aACzBQ,KAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZ,IAAMG,EAAOH,EAAIG,KAAKC,IAAI,SAACC,EAAOC,GAC9B,MAAO,CACHhE,KAAM+D,EAAM/D,KACZkC,MAAO6B,EAAM7B,MACbpC,IAAKiE,EAAMjE,OAGnBuD,EAAKY,SAAS,CAACf,MAAOW,GAAO,WACzB,IAAMK,EAAOb,EAAKlD,MAAM+C,MAAMY,IAAI,SAACC,EAAOC,GACtC,OACIlD,EAAAC,EAAAC,cAACmD,EAAD,CAAMC,IAAKJ,EACPlE,IAAKiE,EAAMjE,IACXE,KAAM+D,EAAM/D,KACZkC,MAAO6B,EAAM7B,MACbE,MAAO,SAACiC,GAAD,OAAKhB,EAAKiB,SAASD,EAAGN,EAAM/D,WAG/CqD,EAAKY,SAAS,CAACd,YAAae,QAGnCK,MAAM,SAAAC,GACHb,QAAQC,IAAIY,sCAIfH,EAAGrE,GACRsD,KAAKW,SAAS,CAACb,WAAW,EAAMnD,KAAMD,EAAM8C,QAAS,+CAGvCuB,GACdf,KAAKW,SAAS,CAACjE,KAAMqE,EAAEI,OAAOV,kDAGhBM,GACdf,KAAKW,SAAS,CAACjB,SAAUqB,EAAEI,OAAOV,yCAG7BM,GAAE,IAAAK,EAAApB,KAEP,GADAA,KAAKW,SAAS,CAACnB,QAAS,KACH,KAAlBQ,KAAKnD,MAAMH,MAAmC,KAAtBsD,KAAKnD,MAAM6C,SAAc,CAChD,GAAGM,KAAKnD,MAAMH,KAAKK,OAAO,GAEtB,YADAiD,KAAKW,SAAS,CAACnB,QAAS,2CAG5BQ,KAAKW,SAAS,CAACb,WAAW,GAAQ,WAC9BsB,EAAK7D,MAAMgD,KAAKjE,OAAO+E,KAAK,WAAY,CACpC3E,KAAM0E,EAAKvE,MAAMH,KACjBC,KAAMyE,EAAKvE,MAAMF,KACjB+C,SAAU0B,EAAKvE,MAAM6C,kBAK7BM,KAAKW,SAAS,CAACnB,QAAS,kEAIrBuB,GACPf,KAAKW,SAAS,CAACb,WAAW,qCAGtB,IAAAwB,EAAAtB,KAEEuB,EAAK/D,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAQ4D,UAAvB,SAAwCxB,KAAKnD,MAAMF,MACnDa,EAAAC,EAAAC,cAAA,SAAOC,UAAWC,IAAQI,UAAWf,KAAK,OAAOgB,YAAY,YAAYC,SAAU,SAAC6C,GAAD,OAAKO,EAAKnD,kBAAkB4C,MAC/GvD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAWC,IAAQI,UAAWf,KAAK,WAAWgB,YAAY,WAAWC,SAAU,SAAC6C,GAAD,OAAKO,EAAKhD,kBAAkByC,MAClHvD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAQyB,IAAKb,QAAS,SAACuC,GAAD,OAAKO,EAAKG,SAASV,KAA5D,WAGZ,OACIvD,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ8D,aACnB1B,KAAKnD,MAAMiD,UACRtC,EAAAC,EAAAC,cAACsB,EAAD,CACAO,WAAY,QACZD,WAAY,SAACyB,GAAD,OAAKO,EAAKhC,WAAWyB,IACjCvB,QAASQ,KAAKnD,MAAM2C,SACf+B,GAEL,KAEHvB,KAAKnD,MAAMgD,oBArGL8B,aAiHRC,cANS,SAAA/E,GACpB,MAAM,CACF0D,KAAM1D,IAI0B,KAAzB+E,CAA+BnC,GCjHxCoC,6MAEFhF,MAAO,CACHH,KAAK,GACLC,KAAK,GACL+C,SAAS,GACTV,MAAO,uFAGO+B,GACdf,KAAKW,SAAS,CAACjE,KAAMqE,EAAEI,OAAOV,OAAO,WACjCJ,QAAQC,IAAIN,KAAKnD,MAAMH,kDAIbqE,GACdf,KAAKW,SAAS,CAAChE,KAAMoE,EAAEI,OAAOV,OAAO,WACjCJ,QAAQC,IAAIN,KAAKnD,MAAMF,kDAIboE,GACdf,KAAKW,SAAS,CAACjB,SAAUqB,EAAEI,OAAOV,OAAO,WACrCJ,QAAQC,IAAIN,KAAKnD,MAAM6C,yDAIVqB,GACjB,GAAqB,KAAlBf,KAAKnD,MAAMH,MAA+B,KAAlBsD,KAAKnD,MAAMF,MAAmC,KAAtBqD,KAAKnD,MAAM6C,SAAc,CACxE,GAAGM,KAAKnD,MAAMH,KAAKK,OAAO,GAEtB,YADAiD,KAAK8B,YAAY,yCAAyC,SAG9D,GAAG9B,KAAKnD,MAAMF,KAAKI,OAAO,GAEtB,YADAiD,KAAK8B,YAAY,8CAA8C,SAGnE9B,KAAKzC,MAAMgD,KAAKjE,OAAO+E,KAAK,aAAc,CACtC3E,KAAMsD,KAAKnD,MAAMH,KACjBC,KAAMqD,KAAKnD,MAAMF,KACjB+C,SAAUM,KAAKnD,MAAM6C,gBAIzBM,KAAK8B,YAAY,uBAAwB,6CAIrC3C,EAASI,GAAW,IAAAQ,EAAAC,KACtB+B,EAAKvE,EAAAC,EAAAC,cAACsB,EAAD,CAAOG,QAASA,EACvBI,WAAYA,EACZD,WAAY,SAACyB,GAAD,OAAKhB,EAAKT,WAAWyB,MACrCf,KAAKW,SAAS,CAAC3B,MAAO+C,uCAGfhB,GACPf,KAAKW,SAAS,CAAC3B,MAAO,wCAGlB,IAAAoC,EAAApB,KACJ,OACIxC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsE,EAAD,CAAY7D,kBAAmB,SAAC4C,GAAD,OAAKK,EAAKjD,kBAAkB4C,IACvD1C,kBAAmB,SAAC0C,GAAD,OAAKK,EAAK/C,kBAAkB0C,IAC/CzC,kBAAmB,SAACyC,GAAD,OAAKK,EAAK9C,kBAAkByC,IAC/CtC,qBAAsB,SAACsC,GAAD,OAAKK,EAAK3C,qBAAqBsC,MACxDf,KAAKnD,MAAMmC,MACZxB,EAAAC,EAAAC,cAACuE,EAAD,cAnEGN,aA+EJC,cANS,SAAA/E,GACpB,MAAO,CACH0D,KAAM1D,IAI0B,KAAzB+E,CAA+BC,4BC/C/BK,EAnCC,SAAC3E,GACb,IAEIwE,EAFAI,EAAO,IAAIC,KAAK7E,EAAM8E,MAAMC,eAShC,OALIP,EAD0B,OAA3BxE,EAAMgF,KAAKC,cACL5E,IAAQ6E,WAGR7E,IAAQ8E,aAGblF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ+E,mBAEW,OAA3BpF,EAAMgF,KAAKC,cACXhF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQgF,SACpBpF,EAAAC,EAAAC,cAAA,UAAKH,EAAMgF,MACX/E,EAAAC,EAAAC,cAAA,UAAKyE,IAET,KAEJ3E,EAAAC,EAAAC,cAAA,OAAKC,UAAW,CAACoE,EAAMnE,IAAQiF,gBAAgBC,KAAK,MAChDtF,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAQmF,SAAUxF,EAAM4B,UAGX,OAA3B5B,EAAMgF,KAAKC,cACXhF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQgF,SACpBpF,EAAAC,EAAAC,cAAA,UAAKH,EAAMgF,MACX/E,EAAAC,EAAAC,cAAA,UAAKyE,IAET,wCCrBDa,EARI,SAACzF,GAChB,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAQqF,SAAU1F,EAAM2F,KAAtC,IAA4C1F,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAQuF,QAAzB,WCClDC,6MAEFvG,MAAM,CACFwG,aAAc,GACdC,SAAU,GACVC,OAAQ,uFAGO,IAAAxD,EAAAC,KACU,KAAtBA,KAAKzC,MAAMgD,KAAK/D,KACfwD,KAAKzC,MAAMiG,QAAQC,KAAK,KAG5BzD,KAAKzC,MAAMgD,KAAKjE,OAAOoH,GAAG,cAAe,SAACC,GACtC5D,EAAK6D,WAAWD,KAGpB3D,KAAKzC,MAAMgD,KAAKjE,OAAOoH,GAAG,gBAAiB,SAACC,GACxC5D,EAAK3D,QAAQuH,KAGjB3D,KAAKzC,MAAMgD,KAAKjE,OAAOoH,GAAG,mBAAoB,SAACC,GAC3C5D,EAAK8D,QAAQF,KAGjB1D,IAAMC,IAAI,oDAAoD,CAAC4D,OAAO,CAClEtH,IAAKwD,KAAKzC,MAAMgD,KAAK/D,OAEpB2D,KAAK,SAAAC,GACFC,QAAQC,IAAIF,GACI,MAAbA,EAAI2D,QACH3D,EAAIG,KAAKyD,QAAQ,SAAAC,GACblE,EAAK3D,QAAQ6H,uCAMzBN,GACJ,IAAMO,EAAG,CAACpD,IAAK6C,EAAIlH,GAAIyG,KAAMS,EAAIjH,MACjCsD,KAAKW,SAAS,CAAC4C,OAAM,GAAAY,OAAA/G,OAAAgH,EAAA,EAAAhH,CAAM4C,KAAKnD,MAAM0G,QAAjB,CAAyBW,sCAG1CP,GACJ,IAAMO,EAAKlE,KAAKnD,MAAM0G,OAAOc,OAAO,SAAC5D,GACjC,OAAOkD,EAAI7C,MAAML,EAAMK,MAE3Bd,KAAKW,SAAS,CAAC4C,OAAOnG,OAAAgH,EAAA,EAAAhH,CAAK8G,wCAGpBP,GACPtD,QAAQC,IAAIqD,GACZ,IAAMO,EAAG,CAAC3B,KAAMoB,EAAIpB,KAAMpD,QAASwE,EAAIxE,QAASkD,KAAMsB,EAAItB,MAC1DrC,KAAKW,SAAS,CAAC2C,SAAQ,GAAAa,OAAA/G,OAAAgH,EAAA,EAAAhH,CAAM4C,KAAKnD,MAAMyG,UAAjB,CAA2BY,qDAIlDlE,KAAKzC,MAAMgD,KAAKjE,OAAOgI,mBAAmB,eAC1CtE,KAAKzC,MAAMgD,KAAKjE,OAAOgI,mBAAmB,iBAC1CtE,KAAKzC,MAAMgD,KAAKjE,OAAOgI,mBAAmB,iEAGzBvD,GACjBf,KAAKW,SAAS,CAAC0C,aAActC,EAAEI,OAAOV,4CAG9BM,GACR,IAAMgB,EAAK/B,KAAKnD,MAAMwG,aACZ,KAAPtB,IAGH/B,KAAKzC,MAAMgD,KAAKjE,OAAO+E,KAAK,kBAAkB,CAC1ClC,QAAS4C,IAEb/B,KAAKW,SAAS,CAAC0C,aAAc,KAC7BrD,KAAK4D,WAAW,CACZrB,KAAM,KACNpD,QAAS4C,EACTM,MAAM,IAAID,MAAOmC,gDAIdxD,GACI,UAARA,EAAED,KACDd,KAAKwE,+CAIL,IAAApD,EAAApB,KACJ,OACIxC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ6G,oBACpBjH,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ8G,qBACpBlH,EAAAC,EAAAC,cAAA,KAAGC,UAAW,CAACC,IAAQ+G,OAAQ/G,IAAQgH,aAAa9B,KAAK,MAAO9C,KAAKzC,MAAMgD,KAAK7D,MAChFc,EAAAC,EAAAC,cAAA,KAAGC,UAAW,CAACC,IAAQ+G,OAAQ/G,IAAQiH,aAAa/B,KAAK,MAAzD,SAAsE9C,KAAKzC,MAAMgD,KAAK5D,OAE1Fa,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQkH,kBACpBtH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,CAACC,IAAQmH,sBAAuBnH,IAAQoH,yBAAyBlC,KAAK,MAE9E9C,KAAKnD,MAAM0G,OAAO/C,IAAI,SAACC,EAAOC,GAC1B,OACIlD,EAAAC,EAAAC,cAACuH,EAAD,CAAanE,IAAKL,EAAMK,IACpBoC,KAAMzC,EAAMyC,UAKhC1F,EAAAC,EAAAC,cAAA,OAAKC,UAAW,CAACC,IAAQmH,sBAAuBnH,IAAQsH,0BAA0BpC,KAAK,MAClF9C,KAAKnD,MAAMyG,SAAS9C,IAAI,SAACC,EAAOC,GAC7B,OACIlD,EAAAC,EAAAC,cAACyH,EAAD,CAASrE,IAAKJ,EACV6B,KAAM9B,EAAM8B,KACZpD,QAASsB,EAAMtB,QACfkD,KAAM5B,EAAM4B,WAKhC7E,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQwH,oBACpB5H,EAAAC,EAAAC,cAAA,SAAOC,UAAWC,IAAQyH,cAAepI,KAAK,OAAOwD,MAAOT,KAAKnD,MAAMwG,aAAcnF,SAAU,SAAC6C,GAAD,OAAKK,EAAKkE,qBAAqBvE,IAC1HwE,UAAW,SAACxE,GAAD,OAAKK,EAAKoE,WAAWzE,MACpCvD,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAQ6H,eAAgBjH,QAAS,SAACuC,GAAD,OAAKK,EAAKoD,YAAYzD,KAA1E,iBAxHGY,aAqIRC,cANS,SAAA/E,GACpB,MAAM,CACF0D,KAAM1D,IAI0B,KAAzB+E,CAA+BwB,oBClIxCsC,6MAEF7I,MAAM,CACFmC,MAAO,yFAGQ,IAAAe,EAAAC,KACfA,KAAKzC,MAAMgD,KAAKjE,OAAOoH,GAAG,qBAAsB,SAACC,GAAD,OAAO5D,EAAK4F,WAAWhC,oDAGrD,IAAAvC,EAAApB,KAClBK,QAAQC,IAAI,WACZN,KAAKzC,MAAMgD,KAAKjE,OAAOsJ,eAAe,qBAAsB,SAACjC,GAAD,OAAOvC,EAAKuE,WAAWhC,wCAG5EA,GACJA,EAAII,QACH/D,KAAKzC,MAAMsI,gBAAgBlC,EAAInH,IAAKmH,EAAIlH,GAAIkH,EAAIjH,KAAMiH,EAAIhH,MAC1D0D,QAAQC,IAAIN,KAAKzC,MAAMgD,MACvBP,KAAKzC,MAAMgD,KAAKjE,OAAO+E,KAAK,aAAc,CACtC7E,IAAKmH,EAAInH,IACTC,GAAIkH,EAAIlH,GACRC,KAAMiH,EAAIjH,KACVC,KAAMgH,EAAIhH,OAEd0D,QAAQC,IAAIqD,GACE,WAAXA,EAAI1G,KACH+C,KAAKzC,MAAMiG,QAAQC,KAAK,CACpBqC,SAAU,UAEE,SAAXnC,EAAI1G,MACT+C,KAAKzC,MAAMiG,QAAQC,KAAK,CACpBqC,SAAU,WAKlB9F,KAAK8B,YAAY6B,EAAIxE,QAAS,6CAI1BA,EAASI,GAAW,IAAA+B,EAAAtB,KAC5BK,QAAQC,IAAI,kBACZ,IAAMyB,EAAKvE,EAAAC,EAAAC,cAACsB,EAAD,CAAOG,QAASA,EACvBI,WAAYA,EACZD,WAAY,SAACyB,GAAD,OAAKO,EAAKhC,WAAWyB,MACrCf,KAAKW,SAAS,CAAC3B,MAAO+C,uCAGfhB,GACPf,KAAKW,SAAS,CAAC3B,MAAO,wCAItB,OACIxB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ+G,QACnB3E,KAAKnD,MAAMmC,MACZxB,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWrE,IACjCrE,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOC,KAAK,QAAQC,OAAK,EAACC,UAAWC,YA1DnCxE,aA4EHC,cAZS,SAAA/E,GACpB,MAAO,CACH0D,KAAM1D,IAIa,SAAAuJ,GACvB,MAAO,CACHP,gBAAiB,SAACrJ,EAAKC,EAAIC,EAAMC,GAAhB,OAAyByJ,EAAS,CAACnJ,KAAMC,EAAQd,QAASI,MAAKC,KAAIC,OAAMC,YAInFiF,CAA6CyE,YAAWX,WCvExDY,MAVf,WACE,OACE9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,KACE/I,EAAAC,EAAAC,cAAC8I,EAAD,SCEYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTN,IAAMC,GAAQC,YAAYnK,GAE1BoK,IAASC,OAAOzJ,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAUJ,MAAOA,IAAOtJ,EAAAC,EAAAC,cAACyJ,EAAD,OAAoBC,SAASC,eAAe,SDsH9E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrH,KAAK,SAAAsH,GACjCA,EAAaC,mCElInBC,EAAAC,QAAA,CAAkB/J,QAAA,4BAAAC,WAAA,+BAAAC,aAAA,iCAAAC,UAAA,8BAAAO,WAAA,oDCAlBoJ,EAAAC,QAAA,CAAkBjF,kBAAA,mCAAAC,QAAA,yBAAAH,WAAA,4BAAAC,aAAA,8BAAAG,eAAA,gCAAAE,QAAA,6CCAlB4E,EAAAC,QAAA,CAAkBnD,mBAAA,qCAAAW,mBAAA,qCAAAV,oBAAA,sCAAAC,OAAA,yBAAAC,YAAA,8BAAAC,YAAA,8BAAAQ,cAAA,gCAAAI,eAAA,iCAAAX,iBAAA,mCAAAC,sBAAA,wCAAAC,wBAAA,0CAAAE,yBAAA,gECAlByC,EAAAC,QAAA,CAAkBlG,YAAA,8BAAAF,SAAA,2BAAAxD,UAAA,4BAAAqB,IAAA,2CCAlBsI,EAAAC,QAAA,CAAkB/J,QAAA,sBAAAC,WAAA,yBAAA+J,OAAA,qBAAAlJ,UAAA,wBAAAE,SAAA,4CCAlB8I,EAAAC,QAAA,CAAkB5I,MAAA,qBAAAC,YAAA,2BAAAC,YAAA,2BAAAG,IAAA,wCCAlBsI,EAAAC,QAAA,CAAkBzE,OAAA,2BAAAF,QAAA,iDCAlB0E,EAAAC,QAAA,CAAkBjD,OAAA","file":"static/js/main.ba914a64.chunk.js","sourcesContent":["const action = {\r\n    addUser: \"ADD_USER\"\r\n};\r\n\r\nexport default action;","import actions from '../Actions/actions';\r\nimport openSocket from 'socket.io-client';\r\n\r\nconst initialState = {\r\n    socket: openSocket('http://34.66.214.100:4000'),\r\n    _id: \"\",\r\n    id: \"\",\r\n    name: \"Akhil\",\r\n    room: \"Cricket\"\r\n}\r\n\r\nconst userReducer = (state = initialState, action)=>{\r\n    switch(action.type){\r\n        case actions.addUser:\r\n            const newState = {...state};\r\n            newState._id = action._id;\r\n            newState.id = action.id;\r\n            newState.name = action.name;\r\n            newState.room = action.room;\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import React from 'react';\r\n\r\nimport classes from './createRoom.module.css';\r\n\r\nconst createroom = (props)=>{\r\n    return(\r\n        <div className={classes.roomdiv}>\r\n            <h1 className={classes.roomheader}>Create Room</h1>\r\n            <div className={classes.roominputdiv}>\r\n                <input className={classes.roominput} type=\"text\" placeholder=\"Your Name\" onChange={props.nameChangeHandler} required/>\r\n                <input className={classes.roominput} type=\"text\" placeholder=\"Room Name\" onChange={props.roomChangeHandler} required/>\r\n                <input className={classes.roominput} type=\"password\" placeholder=\"Password\" onChange={props.passChangeHandler} required/>\r\n            </div>\r\n            <button className={classes.roombutton} onClick={props.buttonClickedHandler}>Submit</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default createroom;","import React from 'react';\r\n\r\nimport classes from './room.module.css';\r\n\r\nconst Room = (props)=>{\r\n    return(\r\n        <div className={classes.roomdiv}>\r\n            <h3 className={classes.roomheader}>{props.name}</h3>\r\n            <p className={classes.roomcount}>Number of users in group are {props.users.length}</p>\r\n            <button className={classes.roomjoin} onClick={props.click}>Join</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Room;","import React from 'react';\r\nimport classes from './popup.module.css';\r\n\r\nconst Popup = (props)=>{\r\n    return (  \r\n        <div className={classes.popup}>  \r\n            <div className={classes.popup_inner}>  \r\n                <h1 className={classes.popupheader}>{props.message}</h1>  \r\n                {props.children}\r\n                <br/>\r\n                <button className={classes.btn} onClick={props.closePopup}>{props.buttonMess}</button>  \r\n                <br/>\r\n                {props.warning}\r\n            </div>  \r\n        </div>  \r\n    );  \r\n}\r\n\r\nexport default Popup;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Room from '../Components/room';\r\nimport Popup from '../Components/popup';\r\nimport classes from './roomList.module.css';\r\nclass RoomList extends Component{\r\n\r\n    state={\r\n        name:\"\",\r\n        room:\"\",\r\n        password:\"\",\r\n        warning:\"\",\r\n        base_url: \"http://34.66.214.100:4000\",\r\n        rooms:[],\r\n        roomsToShow:null,\r\n        showpopup:false\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(this.state.base_url+\"/getrooms\")\r\n            .then(res=>{\r\n                console.log(res);\r\n                const data = res.data.map((value, index)=>{\r\n                    return({\r\n                        name: value.name,\r\n                        users: value.users,\r\n                        _id: value._id\r\n                    });\r\n                });\r\n                this.setState({rooms: data}, ()=>{\r\n                    const view = this.state.rooms.map((value, index)=>{\r\n                        return(\r\n                            <Room key={index}\r\n                                _id={value._id}\r\n                                name={value.name}\r\n                                users={value.users}\r\n                                click={(e)=>this.roomJoin(e, value.name)}/>\r\n                        );\r\n                    });\r\n                    this.setState({roomsToShow: view});\r\n                });\r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    roomJoin(e, name){\r\n        this.setState({showpopup: true, room: name, warning: \"\"});\r\n    }\r\n\r\n    nameChangeHandler(e){\r\n        this.setState({name: e.target.value});\r\n    }\r\n\r\n    passChangeHandler(e){\r\n        this.setState({password: e.target.value});\r\n    }\r\n\r\n    onSubmit(e){\r\n        this.setState({warning: \"\"});\r\n        if(this.state.name!==\"\" && this.state.password!==\"\"){\r\n            if(this.state.name.length>20){\r\n                this.setState({warning: \"Name length Can't exceed 20 characters\"});\r\n                return;\r\n            }\r\n            this.setState({showpopup: false}, ()=>{\r\n                this.props.data.socket.emit('joinRoom', {\r\n                    name: this.state.name,\r\n                    room: this.state.room,\r\n                    password: this.state.password\r\n                });\r\n            });\r\n        }\r\n        else{\r\n            this.setState({warning: \"Both Fields Are Mandatory!\"});\r\n        }\r\n    }\r\n\r\n    closePopup(e){\r\n        this.setState({showpopup: false});\r\n    }\r\n\r\n    render(){\r\n\r\n        const inp =<div>\r\n                    <h4 className={classes.roomname}>Room: {this.state.room}</h4>\r\n                    <input className={classes.roominput} type=\"text\" placeholder=\"Your Name\" onChange={(e)=>this.nameChangeHandler(e)}></input>\r\n                    <br/>\r\n                    <br/>\r\n                    <input className={classes.roominput} type=\"password\" placeholder=\"password\" onChange={(e)=>this.passChangeHandler(e)}></input>\r\n                    <br/>\r\n                    <button className={classes.btn} onClick={(e)=>this.onSubmit(e)}>Submit</button>\r\n                </div>;\r\n\r\n        return(\r\n            <div className={classes.roomlistdiv}>\r\n                {this.state.showpopup ?\r\n                    <Popup\r\n                    buttonMess={\"Close\"}\r\n                    closePopup={(e)=>this.closePopup(e)}\r\n                    warning={this.state.warning}>\r\n                        {inp}\r\n                    </Popup>   :\r\n                    null \r\n                }\r\n                {this.state.roomsToShow}\r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        data: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(RoomList);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Createroom from '../Components/createRoom';\r\nimport RoomList from './roomList';\r\nimport Popup from '../Components/popup';\r\n\r\nclass Main extends Component{\r\n\r\n    state ={\r\n        name:\"\",\r\n        room:\"\",\r\n        password:\"\",\r\n        popup: null\r\n    }\r\n\r\n    nameChangeHandler(e){\r\n        this.setState({name: e.target.value},function(){\r\n            console.log(this.state.name);\r\n        });\r\n    }\r\n\r\n    roomChangeHandler(e){\r\n        this.setState({room: e.target.value},function(){\r\n            console.log(this.state.room);\r\n        });\r\n    }\r\n\r\n    passChangeHandler(e){\r\n        this.setState({password: e.target.value},function(){\r\n            console.log(this.state.password);\r\n        });\r\n    }\r\n\r\n    buttonClickedHandler(e){\r\n        if(this.state.name!==\"\" && this.state.room!==\"\" && this.state.password!==\"\"){\r\n            if(this.state.name.length>20){\r\n                this.createPopup(\"Name length Can't exceed 20 characters\",\"Close\");\r\n                return;\r\n            }\r\n            if(this.state.room.length>20){\r\n                this.createPopup(\"Room Name length Can't exceed 20 characters\",\"Close\");\r\n                return;\r\n            }\r\n            this.props.data.socket.emit('createRoom', {\r\n                name: this.state.name,\r\n                room: this.state.room,\r\n                password: this.state.password\r\n            });\r\n        }\r\n        else{\r\n            this.createPopup(\"All Fields Required!\", \"Close\");\r\n        }\r\n    }\r\n\r\n    createPopup(message, buttonMess){\r\n        const mess=<Popup message={message}\r\n            buttonMess={buttonMess}\r\n            closePopup={(e)=>this.closePopup(e)}/>\r\n        this.setState({popup: mess});\r\n    }\r\n\r\n    closePopup(e){\r\n        this.setState({popup: null});\r\n    }    \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Createroom nameChangeHandler={(e)=>this.nameChangeHandler(e)}\r\n                    roomChangeHandler={(e)=>this.roomChangeHandler(e)}\r\n                    passChangeHandler={(e)=>this.passChangeHandler(e)}\r\n                    buttonClickedHandler={(e)=>this.buttonClickedHandler(e)}/>\r\n                {this.state.popup}\r\n                <RoomList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        data: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Main);","import React from 'react';\r\n\r\nimport classes from './message.module.css';\r\n\r\nconst Message = (props)=>{\r\n    let date = new Date(props.time).toTimeString();\r\n    //let date= moment(props.date).format('DD-MM-YYYY HH:mm');\r\n    var mess;\r\n    if(props.from.toLowerCase()==='me'){\r\n        mess=classes.message_me;\r\n    }\r\n    else{\r\n        mess=classes.message_from;\r\n    }\r\n    return(\r\n        <div className={classes.message_outer_div}>\r\n            {\r\n                props.from.toLowerCase()!=='me' ?\r\n                <div className={classes.details}>\r\n                    <h4>{props.from}</h4>\r\n                    <h6>{date}</h6>\r\n                </div> :\r\n                null\r\n            }\r\n            <div className={[mess, classes.message_common].join(' ')}>\r\n                <p className={classes.messdiv}>{props.message}</p>\r\n            </div>\r\n            {\r\n                props.from.toLowerCase()==='me' ?\r\n                <div className={classes.details}>\r\n                    <h4>{props.from}</h4>\r\n                    <h6>{date}</h6>\r\n                </div> :\r\n                null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\n\r\nimport classes from './onlineuser.module.css';\r\n\r\nconst onlineuser = (props) => {\r\n    return(\r\n        <div>\r\n            <p className={classes.namediv}>{props.user} <span className={classes.spanbg}>Live</span></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default onlineuser;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport Message from '../Components/message';\r\nimport classes from './ChatRoom.module.css';\r\nimport OnlineUsers from '../Components/onlineuser';\r\n\r\nclass ChatRoom extends Component{\r\n\r\n    state={\r\n        messageTyped: \"\",\r\n        messages: [],\r\n        online: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.data._id===\"\"){\r\n            this.props.history.push('/');\r\n        }\r\n\r\n        this.props.data.socket.on('roomMessage', (obj)=>{\r\n            this.addMessage(obj);\r\n        });\r\n\r\n        this.props.data.socket.on('userConnected', (obj)=>{\r\n            this.addUser(obj);\r\n        });\r\n\r\n        this.props.data.socket.on('userDisconnected', (obj)=>{\r\n            this.delUser(obj);\r\n        });\r\n        \r\n        axios.get(\"http://34.66.214.100:4000/getrooms/getonlineusers\",{params:{\r\n            _id: this.props.data._id\r\n        }})\r\n            .then(res=>{\r\n                console.log(res);\r\n                if(res.status===200){\r\n                    res.data.forEach(element => {\r\n                        this.addUser(element); \r\n                     });\r\n                }\r\n            });\r\n    }\r\n\r\n    addUser(obj){\r\n        const ob={key: obj.id, user: obj.name};\r\n        this.setState({online: [...this.state.online, ob]});\r\n    }\r\n\r\n    delUser(obj){\r\n        const ob = this.state.online.filter((value)=>{\r\n            return obj.key!==value.key\r\n        });\r\n        this.setState({online: [...ob]});\r\n    }\r\n\r\n    addMessage(obj){\r\n        console.log(obj);\r\n        const ob={from: obj.from, message: obj.message, time: obj.time};\r\n        this.setState({messages: [...this.state.messages, ob]});\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.data.socket.removeAllListeners('roomMessage');\r\n        this.props.data.socket.removeAllListeners('userConnected');\r\n        this.props.data.socket.removeAllListeners('userDisconnected');\r\n    }\r\n\r\n    messageChangeHandler(e){\r\n        this.setState({messageTyped: e.target.value});\r\n    }\r\n\r\n    sendMessage(e){\r\n        const mess=this.state.messageTyped;\r\n        if(mess===\"\"){\r\n            return;\r\n        }\r\n        this.props.data.socket.emit('messageRecieved',{\r\n            message: mess\r\n        });\r\n        this.setState({messageTyped: \"\"});\r\n        this.addMessage({\r\n            from: \"Me\",\r\n            message: mess,\r\n            time: new Date().getTime()\r\n        })\r\n    }\r\n\r\n    keyPressed(e){\r\n        if(e.key==='Enter'){\r\n            this.sendMessage();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={classes.chatroom_outer_div}>\r\n                <div className={classes.chatroom_header_div}>\r\n                    <p className={[classes.header, classes.header_name].join(' ')}>{this.props.data.name}</p>\r\n                    <p className={[classes.header, classes.header_room].join(' ')}>Room: {this.props.data.room}</p>\r\n                </div>\r\n                <div className={classes.chatroom_content}>\r\n                    <div className={[classes.chatroom_content_comp, classes.chatroom_content_online].join(' ')}>\r\n                        {\r\n                            this.state.online.map((value, index)=>{\r\n                                return(\r\n                                    <OnlineUsers key={value.key}\r\n                                        user={value.user}/>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className={[classes.chatroom_content_comp, classes.chatroom_content_message].join(' ')}>\r\n                        {this.state.messages.map((value, index)=>{\r\n                            return(\r\n                                <Message key={index}\r\n                                    from={value.from}\r\n                                    message={value.message}\r\n                                    time={value.time}/>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className={classes.chatroom_input_div}>\r\n                    <input className={classes.chatroominput} type=\"text\" value={this.state.messageTyped} onChange={(e)=>this.messageChangeHandler(e)}\r\n                        onKeyDown={(e)=>this.keyPressed(e)}></input>\r\n                    <button className={classes.chatroombutton} onClick={(e)=>this.sendMessage(e)}>Send</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        data: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(ChatRoom);","import React,{ Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\nimport actions from '../Actions/actions';\r\nimport Main from '../Containers/Main';\r\nimport Chatroom from '../Containers/ChatRoom';\r\nimport Popup from '../Components/popup';\r\nimport classes from './Auxiliary.module.css';\r\n\r\nclass Aux extends Component{\r\n\r\n    state={\r\n        popup: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.data.socket.on('roomCreationStatus', (obj)=>this.roomStatus(obj));\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        console.log(\"unmount\");\r\n        this.props.data.socket.removeListener('roomCreationStatus', (obj)=>this.roomStatus(obj));\r\n    }\r\n\r\n    roomStatus(obj){\r\n        if(obj.status){\r\n            this.props.onChangeDetails(obj._id, obj.id, obj.name, obj.room);\r\n            console.log(this.props.data);\r\n            this.props.data.socket.emit('setDetails', { \r\n                _id: obj._id,\r\n                id: obj.id,\r\n                name: obj.name,\r\n                room: obj.room\r\n            })\r\n            console.log(obj);\r\n            if(obj.type===\"CREATE\"){\r\n                this.props.history.push({\r\n                    pathname: \"/room\"\r\n                })\r\n            }else if(obj.type===\"JOIN\"){\r\n                this.props.history.push({\r\n                    pathname: \"/room\"\r\n                })   \r\n            }\r\n        }\r\n        else{\r\n            this.createPopup(obj.message, \"Close\");\r\n        }\r\n    }\r\n\r\n    createPopup(message, buttonMess){\r\n        console.log(\"popup creation\")\r\n        const mess=<Popup message={message}\r\n            buttonMess={buttonMess}\r\n            closePopup={(e)=>this.closePopup(e)}/>\r\n        this.setState({popup: mess});\r\n    }\r\n\r\n    closePopup(e){\r\n        this.setState({popup: null});\r\n    }   \r\n\r\n    render(){\r\n        return(\r\n            <div className={classes.header}>\r\n                {this.state.popup}\r\n                <Route path=\"/\" exact component={Main}/>\r\n                <Route path=\"/room\" exact component={Chatroom}/>\r\n            </div>\r\n        )   \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        data: state\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        onChangeDetails: (_id, id, name, room) => dispatch({type: actions.addUser, _id, id, name, room})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Aux));","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Aux from './Hoc/Auxiliary';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Aux/>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport userReducer from './store/user';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(userReducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"roomdiv\":\"createRoom_roomdiv__22E8Y\",\"roomheader\":\"createRoom_roomheader__3cwe1\",\"roominputdiv\":\"createRoom_roominputdiv__2fkiG\",\"roominput\":\"createRoom_roominput__2Xqln\",\"roombutton\":\"createRoom_roombutton__1BhUg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_outer_div\":\"message_message_outer_div__3yhyk\",\"details\":\"message_details__3DX6N\",\"message_me\":\"message_message_me__2bnwY\",\"message_from\":\"message_message_from__1_KNI\",\"message_common\":\"message_message_common__1x6cJ\",\"messdiv\":\"message_messdiv__1llGa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatroom_outer_div\":\"ChatRoom_chatroom_outer_div__3dwvm\",\"chatroom_input_div\":\"ChatRoom_chatroom_input_div__2t-7G\",\"chatroom_header_div\":\"ChatRoom_chatroom_header_div__2M78J\",\"header\":\"ChatRoom_header__1ZInJ\",\"header_name\":\"ChatRoom_header_name__2KrmT\",\"header_room\":\"ChatRoom_header_room__KDNli\",\"chatroominput\":\"ChatRoom_chatroominput__1rgcB\",\"chatroombutton\":\"ChatRoom_chatroombutton__H_ZvQ\",\"chatroom_content\":\"ChatRoom_chatroom_content__E1yz2\",\"chatroom_content_comp\":\"ChatRoom_chatroom_content_comp__3Dx32\",\"chatroom_content_online\":\"ChatRoom_chatroom_content_online__1t2Uf\",\"chatroom_content_message\":\"ChatRoom_chatroom_content_message__16DbR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"roomlistdiv\":\"roomList_roomlistdiv__2O78v\",\"roomname\":\"roomList_roomname__9gAfw\",\"roominput\":\"roomList_roominput__2_fK0\",\"btn\":\"roomList_btn__1_yRV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"roomdiv\":\"room_roomdiv__2M77L\",\"roomheader\":\"room_roomheader__1DK95\",\"rotate\":\"room_rotate__1mdAf\",\"roomcount\":\"room_roomcount__3wltp\",\"roomjoin\":\"room_roomjoin__2OI4E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"popup_popup__dEvQV\",\"popup_inner\":\"popup_popup_inner__3x0w7\",\"popupheader\":\"popup_popupheader__3vj5Z\",\"btn\":\"popup_btn__3Pl8t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanbg\":\"onlineuser_spanbg__2tCLQ\",\"namediv\":\"onlineuser_namediv__2Wc8t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Auxiliary_header__UuwhZ\"};"],"sourceRoot":""}